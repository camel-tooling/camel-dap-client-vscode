name: Deploy to Kubernetes CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  deploy:
    env:
      CODE_VERSION: max
      TEST_RESOURCES: test-resources

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"

      - name: Install JBang
        run: |
          curl -Ls https://sh.jbang.dev | bash -s - app setup
          echo "$HOME/.jbang/bin" >> $GITHUB_PATH
      - name: Setup JBang (trusted sources)
        run: jbang trust add https://github.com/apache/

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Start Minikube
        uses: medyagh/setup-minikube@latest
        with:
          driver: docker
          addons: registry

      - name: Cluster info
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}

      - name: Install
        run: npm ci

      - name: Compile
        run: npm run compile

      - name: UI Tests
        run: |
          eval $(minikube -p minikube docker-env)
          xvfb-run --auto-servernum npm run ui-test:deploy

      - name: Upload Coverage Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ui-test-screenshots
          path: test-resources/screenshots/*.png

  check:
    if: always()
    runs-on: ubuntu-latest
    name: Status Check
    needs: [ deploy ]
    steps:
      - name: Test Matrix Result
        run: |
          echo result = ${{ needs.deploy.result }}
      - name: Status Check - success
        if: ${{ needs.deploy.result == 'success' }}
        run: |
          echo "All tests successfully completed!"
          exit 0
      - name: Status Check - failure
        if: ${{ needs.deploy.result != 'success' }}
        run: |
          echo "Status Check failed!"
          exit 1